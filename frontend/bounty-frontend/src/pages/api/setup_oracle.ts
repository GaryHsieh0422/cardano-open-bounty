import { applyParamsToScript, OfflineEvaluator } from "@meshsdk/core-csl";
import blueprint from "../../../../../aiken-workspace/plutus.json";
import {
  BlockfrostProvider,
  BrowserWallet,
  MeshTxBuilder,
  resolveScriptHash,
  stringToHex,
  deserializeAddress,
  applyCborEncoding,
  serializePlutusScript,
  mOutputReference,
  Data,
  mTuple,
} from "@meshsdk/core";
import { neon } from "@neondatabase/serverless";

export const mintOracleNFT = async (wallet: BrowserWallet) => {
  if (!wallet) {
    alert("Please connect your wallet");
    return;
  }
  if (!process.env.NEXT_PUBLIC_BLOCKFROST_API_KEY) {
    alert("Please set up environment variables");
    return;
  }

  // Set up tx builder with blockfrost support
  const blockfrost: BlockfrostProvider = new BlockfrostProvider(
    process.env.NEXT_PUBLIC_BLOCKFROST_API_KEY,
    0
  );
  const txBuilder: MeshTxBuilder = new MeshTxBuilder({
    fetcher: blockfrost,
    submitter: blockfrost,
    evaluator: new OfflineEvaluator(blockfrost, "preprod"),
  });

  const changeAddress = await wallet.getChangeAddress();
  const utxos = await wallet.getUtxos();
  const collateral = (await wallet.getCollateral())[0];
  const usedAddress = (await wallet.getUsedAddresses())[0];
  const { pubKeyHash, stakeCredentialHash } = deserializeAddress(usedAddress);

  const paramUtxo = utxos[0]!;
  const param: Data = mOutputReference(
    paramUtxo.input.txHash,
    paramUtxo.input.outputIndex
  );

  const OracleNFTSpendingScriptCbor = applyCborEncoding(
    blueprint.validators[16]!.compiledCode
  );

  const OracleNFTAddress = serializePlutusScript(
    {
      code: OracleNFTSpendingScriptCbor,
      version: "V3",
    },
    undefined,
    0
  ).address;

  const OracleNFTMintingScriptCbor = applyParamsToScript(
    blueprint.validators[14]!.compiledCode,
    [param]
  );

  const OracleNFTPolicyId = resolveScriptHash(OracleNFTMintingScriptCbor, "V3");

  const oracleDatum = JSON.stringify({
    constructor: 0,
    fields: [
      {
        bytes: "",
      },
      {
        constructor: 0,
        fields: [
          {
            constructor: 1,
            fields: [
              {
                bytes: "",
              },
            ],
          },
          {
            constructor: 1,
            fields: [],
          },
        ],
      },
      {
        bytes: "",
      },
      {
        constructor: 0,
        fields: [
          {
            constructor: 1,
            fields: [
              {
                bytes: "",
              },
            ],
          },
          {
            constructor: 1,
            fields: [],
          },
        ],
      },
      {
        constructor: 0,
        fields: [
          {
            constructor: 0,
            fields: [
              {
                bytes: pubKeyHash,
              },
            ],
          },
          {
            constructor: 1,
            fields: [
              {
                bytes: stakeCredentialHash,
              },
            ],
          },
        ],
      },
    ],
  });

  try {
    const unsignedTx = await txBuilder
      .txIn(
        paramUtxo.input.txHash,
        paramUtxo.input.outputIndex,
        paramUtxo.output.amount,
        paramUtxo.output.address
      )
      .mintPlutusScriptV3()
      .mint(
        "1",
        OracleNFTPolicyId,
        stringToHex(`${process.env.ORACLE_NFT_ASSET_NAME}`)
      )
      .mintingScript(OracleNFTMintingScriptCbor)
      .mintRedeemerValue(
        JSON.stringify({
          constructor: 0,
          fields: [],
        }),
        "JSON"
      )
      .txOut(OracleNFTAddress, [
        {
          unit:
            OracleNFTPolicyId +
            stringToHex(`${process.env.ORACLE_NFT_ASSET_NAME}`),
          quantity: "1",
        },
      ])
      .txOutInlineDatumValue(oracleDatum, "JSON")
      .txInCollateral(
        collateral.input.txHash,
        collateral.input.outputIndex,
        collateral.output.amount,
        collateral.output.address
      )
      .changeAddress(changeAddress)
      .selectUtxosFrom(utxos)
      .complete();

    const signedTx = await wallet.signTx(unsignedTx, true);
    const txHash = await wallet.submitTx(signedTx);
    console.log(txHash);
    console.log(OracleNFTPolicyId);
    const sql = neon(`${process.env.DATABASE_URL}`);
    await sql(
      "INSERT INTO cardano_open_bounty (name, outputindex, txhash) VALUES ($1, $2, $3)",
      [
        `${process.env.ORACLE_NFT_ASSET_NAME}`,
        paramUtxo.input.outputIndex,
        paramUtxo.input.txHash,
      ]
    );
  } catch (e) {
    console.error(e);
  }
};

export const mintOracleCounter = async (wallet: BrowserWallet) => {
  if (!wallet) {
    alert("Please connect your wallet");
    return;
  }
  if (!process.env.NEXT_PUBLIC_BLOCKFROST_API_KEY) {
    alert("Please set up environment variables");
    return;
  }

  // Set up tx builder with blockfrost support
  const blockfrost: BlockfrostProvider = new BlockfrostProvider(
    process.env.NEXT_PUBLIC_BLOCKFROST_API_KEY,
    0
  );
  const txBuilder: MeshTxBuilder = new MeshTxBuilder({
    fetcher: blockfrost,
    submitter: blockfrost,
    evaluator: new OfflineEvaluator(blockfrost, "preprod"),
  });

  const changeAddress = await wallet.getChangeAddress();
  const utxos = await wallet.getUtxos();
  const collateral = (await wallet.getCollateral())[0];
  const usedAddress = (await wallet.getUsedAddresses())[0];
  const { pubKeyHash, stakeCredentialHash } = deserializeAddress(usedAddress);

  const paramUtxo = utxos[0]!;
  const param: Data = mOutputReference(
    paramUtxo.input.txHash,
    paramUtxo.input.outputIndex
  );

  const idOracleCounterSpendingScriptCbor = applyCborEncoding(
    blueprint.validators[12]!.compiledCode
  );

  const idOracleCounterAddress = serializePlutusScript(
    {
      code: idOracleCounterSpendingScriptCbor,
      version: "V3",
    },
    undefined,
    0
  ).address;

  const idOracleCounterMintingScriptCbor = applyParamsToScript(
    blueprint.validators[14]!.compiledCode,
    [param]
  );

  const idOracleCounterPolicyId = resolveScriptHash(
    idOracleCounterMintingScriptCbor,
    "V3"
  );

  const oracleDatum = JSON.stringify({
    constructor: 0,
    fields: [
      {
        int: 0,
      },
      {
        constructor: 0,
        fields: [
          {
            constructor: 0,
            fields: [
              {
                bytes: pubKeyHash,
              },
            ],
          },
          {
            constructor: 1,
            fields: [
              {
                bytes: stakeCredentialHash,
              },
            ],
          },
        ],
      },
    ],
  });

  try {
    const unsignedTx = await txBuilder
      .txIn(
        paramUtxo.input.txHash,
        paramUtxo.input.outputIndex,
        paramUtxo.output.amount,
        paramUtxo.output.address
      )
      .mintPlutusScriptV3()
      .mint("1", idOracleCounterPolicyId, stringToHex(""))
      .mintingScript(idOracleCounterMintingScriptCbor)
      .mintRedeemerValue(
        JSON.stringify({
          constructor: 0,
          fields: [],
        }),
        "JSON"
      )
      .txOut(idOracleCounterAddress, [
        {
          unit: idOracleCounterPolicyId + stringToHex(""),
          quantity: "1",
        },
      ])
      .txOutInlineDatumValue(oracleDatum, "JSON")
      .txInCollateral(
        collateral.input.txHash,
        collateral.input.outputIndex,
        collateral.output.amount,
        collateral.output.address
      )
      .changeAddress(changeAddress)
      .selectUtxosFrom(utxos)
      .complete();

    const signedTx = await wallet.signTx(unsignedTx, true);
    const txHash = await wallet.submitTx(signedTx);

    console.log(txHash);
    console.log(idOracleCounterPolicyId);

    const sql = neon(`${process.env.DATABASE_URL}`);
    await sql(
      "INSERT INTO cardano_open_bounty (name, outputindex, txhash) VALUES ($1, $2, $3)",
      [
        `${process.env.ID_ORACLE_COUNTER_ASSET_NAME}`,
        paramUtxo.input.outputIndex,
        paramUtxo.input.txHash,
      ]
    );
  } catch (e) {
    console.error(e);
  }
};

export const spendOracleNFT = async (wallet: BrowserWallet) => {
  if (!wallet) {
    alert("Please connect your wallet");
    return;
  }
  if (!process.env.NEXT_PUBLIC_BLOCKFROST_API_KEY) {
    alert("Please set up environment variables");
    return;
  }

  // Set up tx builder with blockfrost support
  const blockfrost: BlockfrostProvider = new BlockfrostProvider(
    process.env.NEXT_PUBLIC_BLOCKFROST_API_KEY,
    0
  );
  const txBuilder: MeshTxBuilder = new MeshTxBuilder({
    fetcher: blockfrost,
    submitter: blockfrost,
    evaluator: new OfflineEvaluator(blockfrost, "preprod"),
  });

  const changeAddress = await wallet.getChangeAddress();
  const utxos = await wallet.getUtxos();
  const collateral = (await wallet.getCollateral())[0];
  const usedAddress = (await wallet.getUsedAddresses())[0];
  const { pubKeyHash, stakeCredentialHash } = deserializeAddress(usedAddress);

  const OracleNFTSpendingScriptCbor = applyCborEncoding(
    blueprint.validators[16]!.compiledCode
  );

  const OracleNFTAddress = serializePlutusScript(
    {
      code: OracleNFTSpendingScriptCbor,
      version: "V3",
    },
    undefined,
    0
  ).address;

  const idSpendingScriptCbor = applyCborEncoding(
    "5909f3010100323232323232323232323223225333006323232323253323300c3001300e37540042646644646464646464646464a666030600660346ea80044c8c94ccc0780040604c94ccc07cc0880084c8c8c8c8c8c94ccc0854ccc084c94ccc088cdc41b8d00600114a0266e3cccdc62400000200c91104000643b000371a910104000643b00014a22a66044921126e616d655f636865636b203f2046616c73650014a02a666042a666042004294454cc0892411469645f6e66745f636865636b203f2046616c73650014a02a666042002294454cc089240118626f756e74795f6e66745f636865636b203f2046616c73650014a02940528180a99918008009129998130008a4000266e012002330020023029001323300100101122533302600114bd700999129998122999812180798131baa33006300c37566022604e6ea8c044c09cdd5001119b8f375c60560026eb8c044c0a0dd50078a5114a0266052004660080080022660080080026050002605200266603e66ebccc03403c94ccc080c02cc088dd51980118041bab300d30233754601a60466ea80048c94ccc088cdc79bae3028302900200513371e00200e2940dd718138008a5114a0980103d87a80004a094488c8cc00400400c894ccc0980045300103d87a800013322533302430050021301333029374e00497ae013300400400137586050002605200266e29220104000de14000333718900419b80371a00290038009bae30223023002375c60420020326eb0c080004c004c8cc004004dd59803980e9baa3007301d37546040603a6ea800c894ccc07c00452f5bded8c0264666444a66603e66e45221000031533301f3371e91010000310011005133024337606ea400cdd3001198030030009bae301e0013756603e002604600460420024646600200200444a66603e002297ae01323332223233001001003225333025001100313233027374e6604e6ea4018cc09cc090004cc09cc0940052f5c0660060066052004604e0026eb8c078004dd5980f80099801801981180118108008a9980ca496365787065637420536f6d65286f776e5f696e70757429203d0a202020202020696e70757473207c3e206c6973742e66696e6428666e28696e70757429207b20696e7075742e6f75747075745f7265666572656e6365203d3d206f776e5f726566207d2900163300500723375e600860366ea800402cc8c8c94ccc064c010c06cdd500089929999998110008a99980d1802980e1baa001132533301f00101a132533333302400101b01b01b01b13232533302200101d1325333333027001132533302400101f1325333333029001020020020020132325333027001022132533333302c0011325333029001024132533333302e0011533302a302d002133300f008133300f003133300f001100d025025025025025025025025302b001302b00202302302302330290013029003375c002604c002604c00403c03c03c03c604800260480066eb8004c084004c074dd500080c80c80c80c80c9919299980d98030008a9980e2481274f7261636c6520696e70757420646f6573206e6f7420636f6e7461696e20616e7920646174756d00161533301b3010001153301c4901224f7261636c6520696e70757420646174756d206d75737420626520696e6c696e6564001613021301e375400460386ea8004c07cc080c080c070dd51803180e1baa301f301c37540022a660349201d165787065637420536f6d65286f7261636c655f696e70757429203d0a202020207265666572656e63655f696e707574730a2020202020207c3e206c6973742e66696e64280a20202020202020202020666e287265665f696e7075743a20496e70757429207b0a2020202020202020202020207175616e746974795f6f66287265665f696e7075742e6f75747075742e76616c75652c206f7261636c655f6e66742e3173742c206f7261636c655f6e66742e326e6429203d3d20310a202020202020202020207d2c0a2020202020202020290016330063758603c603e0124601c66644464a66603a6024603e6ea8004520001375a604660406ea8004c94ccc074c048c07cdd50008a60103d87a8000132330010013756604860426ea8008894ccc08c004530103d87a80001323332225333023337220100062a66604666e3c02000c4c048cc0a0dd400125eb80530103d87a8000133006006001375c60440026eb4c08c004c09c008c094004c8cc004004010894ccc0880045300103d87a80001323332225333022337220100062a66604466e3c02000c4c044cc09cdd300125eb80530103d87a8000133006006001375c60420026eacc088004c098008c090004dd59803180e1baa3006301c37540026eb8c014054dd7180300a911299980d1802980e1baa003132533301f0010021325333333024001132533302100100413253333330260011533302230250021333008003132533301f300a001132533302400100713253333330290011533302530280021325333022300d001132533302700100a132533333302c00115333028302b002133300e00100c00b00b00b00b00b00b3029001302537540042a666044602e002264a66604e002014264a66666605800201601601626464a66605400201a264a66666605e00201c01c01c26464a66605a002020264a666666064002022022022264a66605e60640060260246eb4004044c0bc004c0bc00cdd6800807181600098160019bad00100b30290013025375400401260466ea8004020020020020020c098004c088dd50010a99980f980a0008a99981198111baa0020070060063020375400200a00a00a00a00a00a604600260460040060060060066042002603a6ea800c004888c94ccc068c0140044c94ccc07c00400c4c94cccccc0900040100100100104c94ccc084c09000c018014dd70009810800980e9baa0041533301a300f001132533301f001003132533333302400100400400400413253330213024003006005375c0026042002603a6ea8010008c06cdd50019b87480008c06c0048c068c06c00488c8cc00400400c894ccc0680045300103d87a80001332253330183005002130073301d0024bd70099802002000980e000980e8009ba548000dd6180b00098091baa007301300130133014001300f37540046e1d20021630103011003300f002300e002300e001300937540022930a99803a491856616c696461746f722072657475726e65642066616c7365001365637580022a6600692169657870656374205b28706f6c6963795f69642c207265665f61737365745f6e616d652c205f295d203d0a2020202020206f776e5f696e7075742e6f75747075742e76616c7565207c3e20776974686f75745f6c6f76656c6163652829207c3e20666c617474656e2829001615330024913a657870656374206f7261636c655f696e7075745f646174756d3a204f7261636c65446174756d203d206f7261636c655f696e7075745f6461746100165734ae7155ceaab9e5573eae815d0aba257481"
  );

  const idSpendingScriptAddress = serializePlutusScript(
    {
      code: idSpendingScriptCbor,
      version: "V3",
    },
    undefined,
    0
  ).address;

  const idMintingScriptCbor = applyParamsToScript(
    "",
    [
      stringToHex(`${process.env.COLLECTION_NAME!}`),
      mTuple(
        process.env.ORACLE_NFT_POLICY_ID!,
        process.env.ORACLE_NFT_ASSET_NAME!
      ),
      process.env.ID_ORACLE_COUNTER_POLICY_ID!,
    ],
    "Mesh"
  );

  const bountyBoradScriptCbor = applyParamsToScript(
    "",
    [
      mTuple(
        process.env.ORACLE_NFT_POLICY_ID!,
        process.env.ORACLE_NFT_ASSET_NAME!
      ),
    ],
    "Mesh"
  );

  const bountyBoardScriptAddress = serializePlutusScript(
    {
      code: bountyBoradScriptCbor,
      version: "V3",
    },
    undefined,
    0
  ).address;

  const bountyMintingScriptCbor = applyParamsToScript(
    "",
    [
      mTuple(
        process.env.ORACLE_NFT_POLICY_ID!,
        process.env.ORACLE_NFT_ASSET_NAME!
      ),
    ],
    "Mesh"
  );

  const idMintingPolicyId = resolveScriptHash(idMintingScriptCbor, "V3");
  const bountyMintingPolicyId = resolveScriptHash(
    bountyMintingScriptCbor,
    "V3"
  );

  const oracleDatum = JSON.stringify({
    constructor: 0,
    fields: [
      {
        bytes: idMintingPolicyId,
      },
      {
        constructor: 0,
        fields: [
          {
            constructor: 1,
            fields: [
              {
                bytes: idSpendingScriptAddress,
              },
            ],
          },
          {
            constructor: 1,
            fields: [],
          },
        ],
      },
      {
        bytes: bountyMintingPolicyId,
      },
      {
        constructor: 0,
        fields: [
          {
            constructor: 1,
            fields: [
              {
                bytes: bountyBoardScriptAddress,
              },
            ],
          },
          {
            constructor: 1,
            fields: [],
          },
        ],
      },
      {
        constructor: 0,
        fields: [
          {
            constructor: 0,
            fields: [
              {
                bytes: pubKeyHash,
              },
            ],
          },
          {
            constructor: 1,
            fields: [
              {
                bytes: stakeCredentialHash,
              },
            ],
          },
        ],
      },
    ],
  });

  try {
    const sql = neon(`${process.env.DATABASE_URL}`);
    const queryResult = await sql(
      "SELECT output_index, tx_hash FROM your_table_name WHERE name = $1",
      [`${process.env.ORACLE_NFT_ASSET_NAME}`]
    );

    const { output_index: oracleOutputIndex, tx_hash: oracleTxHash } =
      queryResult[0];

    const unsignedTx = await txBuilder
      .spendingPlutusScriptV3()
      .txIn(oracleTxHash, oracleOutputIndex)
      .txInRedeemerValue(
        JSON.stringify({
          constructor: 0,
          fields: [],
        }),
        "JSON"
      )
      .txInScript(OracleNFTSpendingScriptCbor)
      .txInInlineDatumPresent()
      .txOut(OracleNFTAddress, [
        {
          unit:
            process.env.ORACLE_NFT_POLICY_ID! +
            stringToHex(`${process.env.ORACLE_NFT_ASSET_NAME}`),
          quantity: "1",
        },
      ])
      .txOutInlineDatumValue(oracleDatum, "JSON")
      .txInCollateral(
        collateral.input.txHash,
        collateral.input.outputIndex,
        collateral.output.amount,
        collateral.output.address
      )
      .requiredSignerHash(pubKeyHash)
      .changeAddress(changeAddress)
      .selectUtxosFrom(utxos)
      .complete();

    const signedTx = await wallet.signTx(unsignedTx, true);
    const txHash = await wallet.submitTx(signedTx);
    console.log(txHash);

    const updatedOutputIndex = 0;
    const updatedTxHash = txHash;
    const nftAssetName = process.env.ORACLE_NFT_ASSET_NAME;

    await sql(
      "UPDATE your_table_name SET output_index = $1, tx_hash = $2 WHERE name = $3",
      [updatedOutputIndex, updatedTxHash, nftAssetName]
    );
  } catch (e) {
    console.error(e);
  }
};
